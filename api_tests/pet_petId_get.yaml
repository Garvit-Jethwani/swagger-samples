# Test generated by RoostGPT for test api-spec-microservice using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "pet_petId_get.csv"
    fields:
      - "petId"
    skipHeader: true

scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "category"
            - hasProperty: "name"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"

  - name: "API request with validation failure"
    flow:
      - get:
          url: "/invalid_url/{{ petId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400

  - name: "API request with edge case"
    flow:
      - get:
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "category"
            - hasProperty: "name"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"

  - name: "API request with pet not found"
    flow:
      - get:
          url: "/pet/99999999999999999" # edge case with non-existent petId
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
